"""
Имя проекта: Boring-numpy
Номер версии: 1.0
Имя файла: practicum-3(18-25).py
Автор: 2019 © В.В. Костерин, Челябинск
Лицензия использования:  CC BY-NC 4.0 (https://creativecommons.org/licenses/by-nc/4.0/deed.ru)

Дата создания: 07/12/2019
Дата последней модификации: 07/12/2019

Связанные файлы/пакеты: numpy, random

Описание: Решение задач №№ 18-25 практикума № 3

#версия Python: 3.6
"""
import numpy as np
import random as rnd

"""
18. Создать прямоугольную матрицу A, имеющую N строк и N столбцов со
случайными элементами. Найти сумму элементов, стоящих на главной
диагонали, и сумму элементов, стоящих на побочной диагонали (элементы
главной диагонали имеют индексы от [0,0] до [N,N], а элементы побочной
диагонали — от [N,0] до [0,N]).
"""
print("\nЗадача №18")
N = 5
print("N = ", N)

B = (np.array([rnd.random() for i in range(N*N)]).reshape(N, N) * 100).astype('int') - 50
print("Исходная матрица B\n", B)

print("Сумма элементов главной диагонали ", np.sum(np.diag(B)))

C = np.rot90(B, axes = (1, 0))
print("Повернули матрицу B на 90\n", C)

print("Сумма элементов побочной диагонали ", np.sum(np.diag(C)))

"""
19. Создать квадратную матрицу A, имеющую N строк и N столбцов со
случайными элементами. Определить сумму элементов, расположенных
параллельно главной диагонали (ближайшие к главной). Элементы главной
диагонали имеют индексы от [0,0] до [N,N].
"""
print("\nЗадача №19")
N = 4
print("N = ", N)

B = (np.array([rnd.random() for i in range(N*N)]).reshape(N, N) * 100).astype('int') - 50
print("Исходная матрица B\n", B)

print("Сумма элементов диагонали выше главной", np.sum(np.diag(B, 1)))
print("Сумма элементов диагонали ниже главной", np.sum(np.diag(B, -1)))

"""
20. Создать квадратную матрицу A, имеющую N строк и N столбцов со
случайными элементами. Определить произведение элементов,
расположенных параллельно побочной диагонали (ближайшие к побочной).
Элементы побочной диагонали имеют индексы от [N,0] до [0,N].
"""

"""
21. Создать квадратную матрицу A, имеющую N строк и N столбцов со
случайными элементами. Каждой паре элементов, симметричных
относительно главной диагонали (ближайшие к главной), присвоить
значения, равные полусумме этих симметричных значений (элементы
главной диагонали имеют индексы от [0,0] до [N,N]).
"""

"""
22. Создать прямоугольную матрицу A, имеющую N строк и M столбцов со
случайными элементами. Исходная матрица состоит из нулей и единиц.
Добавить к матрице еще один столбец, каждый элемент которого делает
количество единиц в каждой строке чётным.
"""

"""
23. Создать квадратную матрицу A, имеющую N строк и N столбцов со
случайными элементами. Найти сумму элементов, расположенных выше
главной диагонали, и произведение элементов, расположенных выше
побочной диагонали (элементы главной диагонали имеют индексы от [0,0]
до [N,N], а элементы побочной диагонали — от [N,0] до [0,N]).
"""

"""
24. Создать прямоугольную матрицу A, имеющую N строк и M столбцов со
случайными элементами. Дан номер строки L и номер столбца K, при
помощи которых исходная матрица разбивается на четыре части. Найти
сумму элементов каждой части.
"""

"""
25. Создать прямоугольную матрицу A, имеющую N строк и M столбцов со
случайными элементами. Определить, сколько нулевых элементов
содержится в каждом столбце и в каждой строке матрицы. Результат
оформить в виде матрицы из N + 1 строк и M + 1 столбцов.
"""