"""
Имя проекта: Boring-numpy
Номер версии: 1.0
Имя файла: practicum-3(1-7).py
Автор: 2019 © В.В. Костерин, Челябинск
Лицензия использования:  CC BY-NC 4.0 (https://creativecommons.org/licenses/by-nc/4.0/deed.ru)

Дата создания: 07/12/2019
Дата последней модификации: 07/12/2019

Связанные файлы/пакеты: numpy, random

Описание: Решение задач №№ 1-7 практикума № 3

#версия Python: 3.6
"""

import numpy as np
import random as rnd
"""
1. Создать прямоугольную матрицу A, имеющую N строк и M столбцов со
случайными элементами. Найти наибольший элемент столбца матрицы A,
для которого сумма абсолютных значений элементов максимальна.

3. Создать прямоугольную матрицу A, имеющую N строк и M столбцов со
случайными элементами. Найти наименьший элемент столбца матрицы A,
для которого сумма абсолютных значений элементов максимальна.
"""
print("Задачи №1,3")
N = 3
print("N = ", N)
M = 4
print("M = ", M)

B = (np.array([rnd.random() for i in range(N*M)]).reshape(N,M) * 100).astype('int') - 50
print("B [", N, "x", M, "] =\n", B)

J_SUM = np.sum(np.abs(B), 0)
print("Суммы абсолютых значений в столбцах", J_SUM)
print("Столбец с максимальной суммой = ", np.argmax(J_SUM))
print("Наибольший элемент из столбца с максимальной суммой = ", np.max(B, 0)[np.argmax(J_SUM)])
print("Наименьший элемент из столбца с максимальной суммой = ", np.min(B, 0)[np.argmax(J_SUM)])

"""
2. Создать прямоугольную матрицу A, имеющую N строк и M столбцов со\
случайными элементами. Найти наибольшее значение среди средних\
значений для каждой строки матрицы.
4. Создать прямоугольную матрицу A, имеющую N строк и M столбцов со
случайными элементами. Найти наименьшее значение среди средних
значений для каждой строки матрицы.
"""
print("\nЗадачи №2,4")
N = 5
print("N = ", N)
M = 4
print("M = ", M)

B = (np.array([rnd.random() for i in range(N*M)]).reshape(N,M) * 100).astype('int') - 50
print("B [", N, "x", M, "] =\n", B)

AVR = np.mean(B, 1)
print("Средние значения в строках", AVR)
print("Максимум средних = ", np.max(AVR))
print("Минимум средних = ", np.min(AVR))

"""
5. Создать прямоугольную матрицу A, имеющую N строк и M столбцов со
случайными элементами. Определить средние значения по всем строкам и
столбцам матрицы. Результат оформить в виде матрицы из N + 1 строк и M+1 столбцов.
"""
print("\nЗадача №5")
N = 5
print("N = ", N)
M = 4
print("M = ", M)

B = (np.array([rnd.random() for i in range(N*M)]).reshape(N,M) * 100).astype('int') - 50
print("B [", N, "x", M, "] =\n", B)

colAVR = np.mean(B, 0)
print("Средние значения в столбцах", colAVR)
rowAVR = np.mean(B, 1)
print("Средние значения в строках", rowAVR)

"""
6. Создать прямоугольную матрицу A, имеющую N строк и M столбцов со
случайными элементами. Найти сумму элементов всей матрицы.
Определить, какую долю в этой сумме составляет сумма элементов каждого
столбца. Результат оформить в виде матрицы из N + 1 строк и M столбцов.
"""
print("\nЗадача №6")
N = 5
print("N = ", N)
M = 4
print("M = ", M)

B = (np.array([rnd.random() for i in range(N*M)]).reshape(N,M) * 100).astype('int')
print("B [", N, "x", M, "] =\n", B)

sumB = np.sum(B)
print("Сумма всех элементов = ", sumB)

colSUM = np.sum(B, 0)
print("Суммы в столбцах", colSUM)
partSUM = colSUM / sumB

print("Доля столбца в общей сумме", partSUM * 100)

"""
7. Создать прямоугольную матрицу A, имеющую N строк и M столбцов со
случайными элементами. Найти сумму элементов всей матрицы.
Определить, какую долю в этой сумме составляет сумма элементов каждой
строки. Результат оформить в виде матрицы из N строк и M+1 столбцов.
"""
print("\nЗадача №7")
N = 5
print("N = ", N)
M = 4
print("M = ", M)

B = (np.array([rnd.random() for i in range(N*M)]).reshape(N,M) * 100).astype('int')
print("B [", N, "x", M, "] =\n", B)

sumB = np.sum(B)
print("Сумма всех элементов = ", sumB)

rowSUM = np.sum(B, 1)
print("Суммы в строках", rowSUM)
partSUM = rowSUM / sumB

print("Доля строки в общей сумме", partSUM * 100)
